# üïµÔ∏è‚Äç‚ôÇÔ∏è Experiment 07 ‚Äì Android Forensics (Logical Extraction using ADB)

## üéØ Objective
To perform logical data acquisition from an Android smartphone using ADB commands and extract data such as contacts, call logs, messages, and device information.  
This experiment demonstrates a modern alternative to the deprecated AFLogical OSE tool.

---

## ‚öôÔ∏è Tools & Requirements
Android Debug Bridge (ADB)  
Windows 10 / 11 with Git Bash or Command Prompt  
USB Cable & Android Smartphone (Debug Mode Enabled)  
Forensic Workstation Folder: C:\Forensics\AFLogicalData  

---

## üß© Procedure

### Step 1 ‚Äì Enable Developer Options and USB Debugging
On your Android phone:  
Settings ‚Üí About Phone ‚Üí Tap Build Number (7 times)  
Then Settings ‚Üí Developer Options ‚Üí Enable USB Debugging  

---

### Step 2 ‚Äì Verify Device Connection
adb devices  

**Expected Output**  
List of devices attached  
A65JUT5224000871   device  

---

### Step 3 ‚Äì Start ADB Server (if not already running)
adb kill-server  
adb start-server  
adb devices  

---

### Step 4 ‚Äì Create Extraction Directory on PC
mkdir -p /c/Forensics/AFLogicalData  

---

### Step 5 ‚Äì Perform Logical Extraction Using ADB
adb shell "content query --uri content://contacts/phones/ > /storage/emulated/0/contacts.txt"  
adb shell "content query --uri content://sms/ > /storage/emulated/0/sms.txt"  
adb shell "content query --uri content://call_log/calls/ > /storage/emulated/0/calllog.txt"  
adb shell "getprop > /storage/emulated/0/deviceinfo.txt"  

‚úÖ These commands extract Contacts, SMS, Call Logs and Device Info and store them as `.txt` files in `/storage/emulated/0/`.

---

### Step 6 ‚Äì Verify Files on Device
adb shell  
ls /storage/emulated/0 | grep txt  

**Expected Output**  
contacts.txt  
sms.txt  
calllog.txt  
deviceinfo.txt  

exit  

---

### Step 7 ‚Äì Pull Extracted Evidence to Local Workstation
adb pull /storage/emulated/0/contacts.txt C:\Forensics\AFLogicalData\  
adb pull /storage/emulated/0/sms.txt C:\Forensics\AFLogicalData\  
adb pull /storage/emulated/0/calllog.txt C:\Forensics\AFLogicalData\  
adb pull /storage/emulated/0/deviceinfo.txt C:\Forensics\AFLogicalData\  

Resulting Files:  
C:\Forensics\AFLogicalData\  
  ‚îú‚îÄ‚îÄ contacts.txt  
  ‚îú‚îÄ‚îÄ sms.txt  
  ‚îú‚îÄ‚îÄ calllog.txt  
  ‚îî‚îÄ‚îÄ deviceinfo.txt  

---

### Step 8 ‚Äì Verify Extracted Data
cd /c/Forensics/AFLogicalData  
ls  

cat contacts.txt | head  
cat sms.txt | head  
cat calllog.txt | head  
cat deviceinfo.txt | head  

---

### Step 9 ‚Äì Move or Copy Screenshots for Documentation
mkdir -p /c/Users/krthc/Downloads/digital-forensics-experiments-2025/exp07-android-forensics/screenshots  
cp "/c/Users/krthc/OneDrive - Personal/Pictures/Screenshots/"*.png /c/Users/krthc/Downloads/digital-forensics-experiments-2025/exp07-android-forensics/screenshots/  


---



## üîç Observation
ADB commands allow controlled access to logical data without requiring root privileges.  
This method retrieves call logs, messages, contacts, and system details securely.  
It acts as a modern CLI-based replacement for the AFLogical OSE forensic application.  

---

## ‚úÖ Result
Logical extraction was successfully performed using ADB.  
Extracted artifacts (Contacts, SMS, Call Logs, and Device Info) were pulled and verified.  
All evidence files were stored in the forensic workstation for further analysis.  

---

## üß† Inference
ADB-based extraction is a reliable method for forensic acquisition on non-rooted Android devices.  
It preserves data integrity and provides transparency in digital evidence collection.  

---

## üë®‚Äçüíª Author
Karthick Deepan K  
B.Tech Computer Science (Cyber Security)  
Kalasalingam Academy of Research and Education  
